spring.datasource.url=jdbc:mysql://localhost:3306/models?modelsSSL=false
spring.datasource.username=root
spring.datasource.password=!@aA12345

## PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/models
#spring.datasource.username=root
#spring.datasource.password=!@aA12345



## default connection pool
#spring.datasource.hikari.connectionTimeout=20000
#spring.datasource.hikari.maximumPoolSize=5


spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
server.port=8080

spring.session.store-type=jdbc
spring.session.timeoutseconds=600
spring.datasource.initialization-mode=always
spring.session.jdbc.initialize-schema=always


spring.mail.host = smtp.gmail.com
spring.mail.username =hiteshicomp11@gmail.com
spring.mail.password =Lavish@123
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port =25
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = true
spring.mail.properties.mail.smtp.starttls.enable=true


logging.level.root=debug                           
logging.level.org.springframework.web=debug
logging.level.org.hibernate.sql=debug
logging.level.org.apache.catalina=debug
logging.level.org.apache.logging.log4j.core.appender=debug
logging.file = logs/application.log
logging.file.max-size: 10kb

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=uploadfiles/
